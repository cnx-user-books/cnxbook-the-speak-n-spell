<document xmlns="http://cnx.rice.edu/cnxml">
  <title>Taking the Speak N Spell into Production</title>
<metadata xmlns:md="http://cnx.rice.edu/mdml">
  <md:content-id>m46851</md:content-id>
  <md:title>Taking the Speak N Spell into Production</md:title>
  <md:abstract>Introducing a talking product into a production line was not as easy as it would first seem. This chapter will describe many of the issues we faced taking it into production.</md:abstract>
  <md:uuid>6f0605c9-d62e-46e5-a10a-e79712c24aa7</md:uuid>
</metadata>

<content>
	<section id="eip-900"><title>Introduction</title>
	
	<para id="eip-956">We were building our first pre-production devices to use for qualification and early samples to important people.  It was during the summer after the June CES. We had decided that the production line would be set up in Midland, Texas at the airport in the old Windecker plant at the end of the runway. After we had completed the pre-production build we put them all on burn-in and life test to begin their qualification process. It was at this point that the night guard at the plant discovered a bug. With the long tested Texas concept of "one riot, one ranger", he was alone in the building as production lines were only running during the day. Well into the night, the guard began to hear voices. His only conclusion was that someone had gotten into the building. Now, I don't know whether he had his revolver out ready to fire, but, at that time guards at Texas Instruments were authorized to carry a weapon. So I'll not embellish the story with that aspect. As he made his way through the production lines he could still hear the voices which seemed to be coming from the back of the facility (where we had our burn in racks). He finally made it back to where the voices were and discovered that the burn in racks were talking to each other. Actually, the Speak N Spell design had a bug of which we never fixed. While powered up during burn in, we had a way of doing this through the module port, the bug started one Speak N Spell talking. For some strange reason, others would reply followed by more until it sounded like a crowd of people talking. I guess it is important to explain that he was not told about a new talking product being manufactured at the plant. I never saw the report he wrote up and never saw any bullet holes in the burn in racks, but suspect he had a once in a lifetime story to tell about the night he heard voices.</para><para id="import-auto-id1377544">Surprisingly, taking the Speak N Spell into production was as difficult as creating it.  We had never introduced a product to a production line which spoke.  Normal production line expectations immediately became significant issues.  For example, production lines are noisy; production line workers aren’t tested for hearing; quality standards for speech, particularly synthetic speech were not known.</para>
    <para id="import-auto-id7400864">We had already experienced quality issues when we created the vocabularies.  It started with picking a good professional speaker to speak the words.  Our synthesis method was Linear Predictive Coding.  We chose LPC-10 at an 8kHz sample rate.  That meant the LPC filter had ten coefficients.  We used all ten for a voiced sound and only four for an unvoiced sound.  We chose 8kHz as the right sample rate as it was what the phone system used.  The issue is that many of the unvoiced sounds are actually above 4kHz (the bandwidth of the signal is, by definition, less than half of the sample rate according to the Nyquist theorem).  To compound the quality issue, I had chosen not to put an anti-aliasing filter on the output of the synthesis chip.  Rather than the filter, I chose to carefully pick a cheap output speaker that had a two pole roll off at 3.3KHz.  The decision saved us money at the sacrifice of speech quality.</para><para id="import-auto-id7391754">We found that the professional speaker needed to be a male with a relatively low voice with little character.  That is not “sing-songie” or a lot of vibrato.  We called it an LPC voice.  </para>
    <para id="import-auto-id7400396">With the male voice chosen (a DJ from the Dallas area), we began recording the words and editing them.  Each word had to be edited to fix errors made by the computer while analyzing the sounds.  Most of the errors were voicing errors, pops or ringing tones.  Or at least we thought that was all.  We first chose engineers and scientists to do the editing but quickly realized that the reason we were engineers and scientists was due to our lack of language skills.  We ended up hiring linguists and language majors to do the editing.</para>
    <para id="import-auto-id6954291">Even with the proper professional speaker and editor, we had problems.  As it turns out, the more one hears the word the better it sounds.  We, as should always be done, formed a committee to resolve the familiarity issue.  We had about six people on the committee with the editor.  Our job was to listen to the word, without knowing what the word was, and scoring it.  Each would write down the word they heard and whether it was acceptable or not.  If it was not acceptable, then a description of the issue was added.</para>
    <para id="import-auto-id7428053">As an example of the problem, in one of these QC sessions, all six of us wrote down the word we heard and all agreed that the word was acceptably spoken. When we compared notes, we found that each of us had written down a different word. Unfortunately, I can’t remember the word, but the experience added a step to the QC procedure. It also was a preview of the difficulties we would have on the production line with production people who were not professional linguists.</para><para id="import-auto-id3138912">I’ve said all of this to get us to the issues on the production line with speech quality.  The issues were </para><list id="eip-6"><item>The noise on the production line</item>
<item>The qualifications of the individuals doing the speech quality test</item>
<item>The tester's familiarity with the sounds after listening to them many times</item></list>
</section>
<section id="eip-901"><title>Noise on the Production Line</title>

<para id="import-auto-id6948083">We couldn’t eliminate the noise on the production line.  We considered moving the testing to another location where it would be quiet.  But, that would be very difficult logistically and was abandoned.  Although, we had many meetings in a quiet conference room arguing over speech quality and volume (yes, I eliminated a volume control as it saved a dime or so).</para>
    <para id="import-auto-id7519963">We finally solved the problem by building Styrofoam “dog houses” for the testers.  These dog houses had three walls and a ceiling.  They were about a meter on a side and about a meter and a half tall.  The tester sat on the production line inside the dog house facing its back wall.  They spent eight hours a day seeing nothing but the inside of a white enclosure.  It was a bit quieter but far from the optimal environment for a tester.  Many comments and suggestions were written on the inside of the dog houses.  Few of the suggestions were either possible or implementable.  I don’t believe any psychological problems were caused.</para>
	</section>
<section id="eip-902"><title>Selecting the Testers</title>

	<para id="import-auto-id7415152">The next issue was choosing and qualifying the testers who would live out their days in the dog houses. We took the time to do hearing tests on all of the production people to help us pick the appropriate testers, just as we had done for the editing and QC staff who had created the vocabulary. But, once we got the results of the tests, we asked ourselves a hard question: “Do we chose those with average hearing, good hearing, or great hearing? We ended up throwing out the test results and picked people who seemed to catch on quickly to what we were looking for.  </para><para id="eip-701">This did backfire for us one time.  On a particular day we were having units make it through test that weren’t talking.  This was an issue as they should have been caught by the testers.  So, as part of our trouble shooting method, we asked each of the testers how they were testing the units.  The first couple of testers explained what they were doing and it was exactly what we had told them to do.  When we approached the last tester to ask how they were doing the test, the tester didn't respond to our request.  Yes, the person was deaf.  So, we learned that, although the tester didn't need to have perfect hearing to do the testing, they did need to be able to hear.  Go figure!  </para>
	</section>
<section id="eip-903"><title>Consistent Quality</title>
	
	<para id="import-auto-id7427420">Finally, the familiarity issue was the hardest to solve.  Typically, a quality issue on a production line became easier to detect the more one became familiar with it.  For example a scratch in the plastic case became easier to spot with experience. In the extreme, the scratch goes from unnoticed to an issue to a reason to shut down the production line in a matter of days.  But, just the opposite happens with speech quality.</para><para id="import-auto-id7391117">Several years prior to the Speak N Spell, I was on a desktop calculator production line.  We had on the product in production, the TI-450, two different shades of gray keys to distinguish the numbers keys from the function keys.  One day the line came to a halt because it was noted that one of the keys had yet a third shade of gray. This quickly became a reason to shut down the production line until the issue was resolved. I decided to run an experiment to determine the severity of the problem. I took one of the offending calculators out into the hallway of the building (the S/C building in Dallas for those of you who are interested). I stopped people at random and asked them to tell me what was wrong with the calculator. No one noticed anything wrong. I further pointed them to the keyboard as the area where the problem existed – still not an issue. Finally I would point them to the offending key and the one next to it. At this point most, but not all, would say “oh, they're not quite the same color”. That is when I learned how familiarity increased awareness on a production line. Once pointed out, the color difference was obvious.</para><para id="import-auto-id6716831">But that wasn’t so for voice.  As we had learned from creating the words, familiarity decreases the sensitivity to quality rather than increasing it.  Our solution was to continually change the people doing the testing.  As you might expect, this was well received by the testers who were spending all day in the dog houses.  You might say we solved two problems with one solution.  We rotated the testers to keep them fresh – where fresh had two different concepts.  It also added to the variety of comments written on the walls of the dog houses.</para><para id="import-auto-id1169209656121">On top of all of these issues, we had a bit of a bug in our algorithm that caused a speech quality issue. We had designed the unit to take on additional vocabularies.  This was in response to the focus group’s input that the vocabulary size wasn’t large enough. It would also allow us to give students more words, generating an additional revenue stream for the product. Unfortunately, if you pressed the key to enable the alternative spelling words in the module, and a module wasn’t there, the Speak N Spell would start talking with whatever data it was getting from free air. We called this “garbled speech”. Sometimes it would finish and come back and sometimes it would just keep going, on and on until the batteries were removed and the unit reset. We fixed it as quickly as possible but it caused a lot of heartache for all of us before it was over.</para><para id="import-auto-id7316078">As an example, we received a letter and a cassette tape from a Speak N Spell owner on the subject of garbled speech.  His letter simply said “my Speak N Spell going off every once in a while and starts giving random sounds, but, then it says a dirty word.  I am sending you a recording of it so you will know what it says.  And, no, I will not return it to you.” </para>
    <para id="import-auto-id8233519">Let me go back to the bug the night guard found and give a bit of explanation.  We knew that the devices would need to be burned in prior to shipping.  So, I had the PCB laid out so it could be powered through the module port.  The module port is where a user would normally plug in additional vocabulary ROMs.  But, for burn in, we could plug in a modified module which would power up the unit and defeat the automatic power down feature.  What we found to be the issue is that we had used a signal diode rather than a power diode on each of the modules.  But the production line rejected that solution and chose to use a different solution.  They decided to use spring clamps to hold the "on" key down all of the time rather than replacing the diode.  I chose to let them use their solution rather than continuing to complain about mine.  This made life much easier.  </para><para id="eip-688">If you don't know much about Texas geography, let me explain where various events were happening on the Speak N Spell program.  It will help you appreciate the effort to take it into production.  Here is a quick summary:</para><list id="eip-859"><item>Dallas. This is where the research and market communications team were. This is also the headquarters for Texas Instruments. Everyone knows where Dallas is, right?</item>
<item>Lubbock. This is where the development team lived along with the plastics shop that manufactured the case, besels, keyboards, etc. Lubbock is in the panhandle of Texas and the home of Texas Tech University.</item>
<item>Houston. This is where the IC's were designed and manufactured. I now live in Houston - if anyone cares.</item>
<item>Midland. This is where the Speak N Spells were initially manufactured. It is about 150km south of Lubbock. It is named based on the fact that it is exactly halfway between El Paso and Dallas.</item>
</list><para id="eip-88">We were spread out all over Texas. The only good news is that if this program had been done today, we would have been spread out over the globe rather than just Texas. But it did make troubleshooting bugs and fixing them difficult.  I'll give a couple of examples in the next paragraph or so.</para><para id="eip-0">As I indicated earlier we did our pre-production ramp in the June/July time of 1978. That meant the design team traveled from Lubbock to Midland every week to resolve manufacturing issues. These weekly visits increased from a day or so (remember, in West Texas, 150km is only an hour or so drive), to driving out early on Monday morning, staying the week and returning Friday evening. The weekly trek to Midland lasted until Thanksgiving or early December.  Christmas was coming and it might not be possible to get the product to the stores in time.  We were all very thankful that Christmas.</para><para id="eip-151">One of the production issues kept me in Lubbock to resolve it. Due to its severity, I lived through one of those novel 3 day weeks. I started on Monday morning and worked through the night until Tuesday morning. I came back in Wednesday morning and worked through the night until Thursday morning. With the fix determined, I was asked to drive to Midland on Friday to install it. After I explained that I would not be able to stay awake driving my car to Midland and back, it was decided that a charter plane would fly me to Midland and back. As the manufacturing facility was at the end of the runway at the airport. The plane landed, taxied to the front door of the manufacturing plant for me to get off. After I had implemented the change, I called the pilot and he taxied back over to the plant. I got on and flew back to Lubbock, that was quite an experience for a young engineer.</para><para id="eip-830">Probably the most difficult problem we had was with the controller chip, the TMC0271. It magically became the cause of the Speak N Spell to fall out of production. This problem required people in Midland, Lubbock and Houston to work together for a resolution. The problem ended up being a manufacturing problem with the TMC0271. At the time there were two products being manufactured on the TMC0270 base set: the Speak N Spell's TMC0271 and another product, the TMC0272. For yield reasons, each of the two versions of the TMC0270 had different production flows. Over a period of several production lots the two devices swapped process flows. Once the switch was found, it was rather straight forward to get back into production.</para><para id="eip-585">If I didn't cover it in an earlier chapter the last hardware bug for garbled speech was finally identified. It was a clock issue. The synthesis algorithm required a 22 stage pipeline. The 22 time intervals was created by taking a base 32 counter and having it reset on the 22nd count. Unfortunately, the other 10 states in the counter were not designed to drive the count back to zero but rather started its own counter. Once out of the 22 state counter it would cause garbled speech. Fortunately long before we found the actual cause of the problem we found an un-explainable simpler fix with a few ceramic capacitors.</para><para id="eip-28">I'll end this chapter with one of my favorite bug fixes. The Speak N Spell was in its third or fourth year of production and had been moved from Midland to Abilene, Texas. To reduce the cost further, the potentiometer used to set up the clock frequency had been replaced with three resistors, of which one or two of the three resistors could be clipped out to bring the clock frequency into specification. As expected the Speak N Spell fell out of production as the resistor solution no longer worked on a high percentage of the devices. I was called in with my technician to help troubleshoot the problem and fix it. The product line technician had spend quite a while attempting to resolve the issue with no real success. He was not at all happy when I explained it was a date code issue. He still didn't believe it even after we ran a test where I picked the good from the bad based on the date code of the TMC0271 (again the culprit). I finally had to break down and explain that there had been a process mode change to the next smaller geometry. That meant that the simple oscillator in the device had changed characteristics and would need a new set of three resistors to get the clock frequency within the specification. I guess I should have said that earlier, but I wasn't happy being pulled back in to the product engineering role and thought I could at least have a bit of fun with it.</para><para id="eip-483">This last story did teach me an important lesson.  It is now my "rule of the decade". It goes this way:  Just because you can make one doesn't mean you can make 10, and just because you can make 10 doesn't mean you can make 100, and just because you can make 100 doesn't mean you can make 1,000, ..... and just because you can make a million doesn't mean you can make 10 million of them.  Each decade of manufacturer brings a new set of production problems.  Researchers believe that making one work proves it possible, designers believe that making 10 work proves it is producible, quality engineers believe that making 1,000 proves is will be reliable.  It is only the product engineers, who have to stay around through the life of the product, who understand this rule.</para></section>
</content>
</document>