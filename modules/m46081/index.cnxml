<document xmlns="http://cnx.rice.edu/cnxml">
  <title>The Idea</title>
<metadata xmlns:md="http://cnx.rice.edu/mdml">
  <md:content-id>m46081</md:content-id>
  <md:title>The Idea</md:title>
  <md:abstract>This modules discusses how the idea for the Speak N Spell was created by Paul Breedlove. It ends with finally gaining funding to produce the first demonstration of the product idea.</md:abstract>
  <md:uuid>544fe861-5ff1-43c7-b95f-b43f68331097</md:uuid>
</metadata>

<content>
	<section id="eip-200"><title>Introduction</title>
    <para id="import-auto-id6281668">Paul Breedlove had the idea to create a product that would help children to spell, just as the Little Professor™ Learning aid (1) had done for math.  Figure 1 shows a Little Professor, TI's first attempt at moving away from the classical concept of a calculator to a product that would help students learn the concepts of math. Unlike spelling, a math problem can be stated using written words.  Or, in the case of the Little Professor, present the math problem minus the solution.  The user could then enter the solution to the problem, with three tries at answering, before the correct answer was displayed moving on to the next formula. Addition, subtraction, multiplication and division in four different levels of difficulty were taught.  It is worth noting here that several years later we created a talking math product called Speak N Math™(2), see Figure 2.</para><para id="eip-602">For the Little Professor the problems and responses were presented using an LED display. In the case of spelling an LED display wouldn't work, the product would need to speak the word to be spelled and then allow the child to enter the spelling of the word. If the spelling was correct the next word would be introduced, if incorrect, the child would be told that it was wrong and allowed to try again.  If the response was still incorrect a third time the word would be spelled correctly before moving on to the next word.</para><para id="import-auto-id6822486">
      <figure id="import-auto-id6280830"><media id="import-auto-id6208082" alt="">
          <image mime-type="image/jpg" src="../../media/graphics1-a3ea.jpg" height="200" width="155"/>
        </media>
      <caption>The Little Professor learning aid from Texas instruments circa 1976.</caption></figure><figure id="import-auto-id6235342"><media id="import-auto-id6831853" alt="">
          <image mime-type="image/jpg" src="../../media/graphics2-54f2.jpg" height="200" width="155"/>
        </media>
      <caption>The Speak n Math learning aid from Texas Instruments, circa 1980.</caption></figure></para>
    <para id="import-auto-id6426011">There was another interesting concept being developed at TI called “Bubble Memories”. The idea was to store data using magnetic technology to create magnetic bubbles. Bubbles were created and then moved around a designated path using a magnetic field. As they came around the track, they could be read, destroyed or created. The benefit of magnetic bubbles was that they remained stable when the magnetic field was turned off. It was a new concept of a non-volatile memory.  Other that the technical difficulties, there was one major issue – what could be done with these memories that couldn’t already be done? That is, what was the killer application that would drive the development. It was a technology looking for a problem to solve.</para><para id="import-auto-id6767114">With this as a background, here is how the idea for the Speak N Spell evolved.</para>
    </section>
	<section id="eip-201"><title>Evolving the Idea</title>

    <para id="import-auto-id6765237">When it became apparent that the Little Professor math learning aid was going to be a success, a brainstorming session was called among many people in the corporation, including Jim Moore leader of the consumer calculator design team. Among the possibilities was a spelling learning aid. Other people in the session were looking for killer application(s) for another interesting concept being developed at TI called “Bubble Memories”. They thought it could be a good technology for the non-volatile memory needed to store the spelling lists in such a learning aid.  As they continued to brainstorm about the spelling learning aid they came upon a stumbling block; how should the word to be spelled be presented?  Several possibilities were discussed, but a suitable solution was not identified.</para><para id="import-auto-id6956708">After the session Jim Moore told Paul Breedlove, who had just joined Jim’s team, about the brain storming session. Jim asked Paul to look into the spelling learning aid concept and the possibility of using bubble memory as a storage medium for the spelling lists. They discussed the fact that there was no solution identified to solve the “presentation of the word to be spelled” problem. Paul was intrigued by the concept of the spelling learning aid. He went home that night, had dinner, and wrestled with the problem of how to present the words. Later that evening, his 9 year old daughter and his 7 year old son asked for some help on their spelling assignments. As he called out the words and listened to the answers, he corrected them when they made errors. He decided that the spelling learning aid would have to speak the words to the students, just like he and other parents did all the time. After working for a year in the speech research department at TI, designing electronics to assist researchers in their efforts, Paul had a good understanding of the capability of the researchers and felt they could help solve the problem. This would allow the product to speak the words that were to be spelled in addition to the other responses and instructions the product would need to use, by using synthetic speech technology.</para><para id="import-auto-id6451516">Paul spent the next several days detailing his ideas for the spelling learning aid in his engineering notebook (see Appendix 1). He also soon realized that the spelling learning aid concept would not require a sophisticated memory, like bubble memories, but only needed Read Only Memory (ROM). However, it would need a large ROM, far larger than the state of the art could give. His estimate was that the product would need approximately 256K bits. At that time, the state of the art for ROMs was about 4K bits. The good news was that he had resolved in his mind one of the burning issues – how to store the massive amount of speech data at a very low cost. It turns out, the data could be compressed by synthesizing speech. Now, only the “impossible” speech synthesis task was an unknown.</para>
	</section>
	<section id="eip-202"><title>The “Spelling Bee”</title>

    <para id="import-auto-id6440445">Paul originally called the spelling learning aid the “Spelling Bee” which became the project name throughout development, Figure 3 shows his initial concept and the cleaned up version is seen in Figure 4. In his engineering notebook he detailed how the product would interact with the user. The fact that speech synthesis had yet to be done in a single chip didn’t seem to bother him a great deal. What he needed was funding to get the program moving forward.</para><para id="import-auto-id6820291">
      <figure id="import-auto-id5953033"><media id="import-auto-id6417961" alt="">
          <image mime-type="image/jpg" src="../../media/graphics3-f517.jpg" height="500" width="375"/>
        </media>
      <caption>Spelling Bee original drawing by Paul Breelove.  Paul's complete idea for the product can be found in his engineering notebook.</caption></figure><figure id="import-auto-id6962018"><media id="import-auto-id6600641" alt="">
          <image mime-type="image/jpg" src="../../media/graphics4-3844.jpg" height="500" width="575"/>
        </media>
      <caption>The cleaned up version used in early presentations on the product idea.</caption></figure></para>
    </section>
	<section id="eip-203"><title>Finding Funding</title>

    <para id="import-auto-id6260961">At that time TI had a formal method of acquiring funding called OST (Objectives, Strategies and Tactics). The OST had been put into action by one of our former CEOs, Pat Hagerty. Paul took the proposal through the OST process, but it was felt to be too risky. The OST objective was to make sure all of the projects necessary to create TI's future products would be funded. It allowed business managers to put more focus on the net revenue for the present month, quarter or year while their future products were being developed under OST. After reviewing the concept of the spelling bee, they recommended that Paul submit it for special “Wild Hare” funding as the concept had far more risk than allowed under OST funding. The Wild Hare funding source had been set up for high risk programs with a chance of a big reward if successful, the goal was to fund projects with less than ten percent chance of succeeding. Though the project seemed intriguing it was again deemed too risky, even for Wild Hare money. After reviewing the failure to obtain funding with the division manager, it was suggested that Paul seek IDEA Funding from the IDEA Coordinator, Ralph Dozier. The concept behind the IDEA funding was as follows:</para><para id="import-auto-id6761034">When an engineer at TI had an idea for a new product that could be valuable to TI, but for various reasons there was no funding available through the OST program, the IDEA program gave another path to funding. The IDEA program assumed that the engineer wasn’t ready to give up for lack of funding – in other words the engineer was far too passionate to let it go away. To get funded the engineer agreed to do the work on their own time with assurances to the boss that it wouldn’t interfere with the assigned work load. The funding would take care of any need that would require a small amount of money to buy things, or to contract outside expertise to complete the project. Completion was defined to be a feasibility demonstration of the product concept to management. Then if accepted, the project would be put in the OST process to get further funding.  </para><para id="import-auto-id7070985">The process for obtaining IDEA funding was simply to present the idea to any of the IDEA representatives. These representatives were chosen from the technical staff and were generally senior technologists who could better understand the technical risks. An IDEA representative could fund any project up to $25,000. There was very little paperwork required to make this funding happen.  </para><para id="import-auto-id6416122">Paul presented the Spelling Bee idea to Ralph and he agreed to provide the $25,000 needed to demonstrate feasibility of the Spelling Bee.  </para>
    <para id="import-auto-id6843048">There was still a lot of work to be done to show feasibility of the product idea. The first step was to choose a method of creating speech with an IC. There was a brand new concept for synthesizing speech using a mathematical model of the human vocal tract. This mathematical model used a 10 pole recursive filter, specifically it was known as “Linear Predictive Coding” with ten poles (LPC-10). Further LPC-10 was an analysis and synthesis system. The speech code would be captured using a professional speaker in a studio. The spoken words would be processed by a mini-computer in non-real-time. The resulting data set was then hand edited by a human editor to remove the errors that were caused either in the analysis/synthesis process or by how the model was implemented in the IC. I will go in to more detail on how the synthesizer worked in a later chapter. But this should be enough for us to continue on with the story of how we demonstrated the concept. It was important that we could demonstrate acceptable synthetic speech with a data rate of about 1200 bits per second.</para><para id="import-auto-id6842206">Now with resources and a basic path forward, Richard Wiggins went to work on developing a computer simulator of the Spelling Bee. The demonstration would be shown on a mini-computer in TI’s speech research lab with all of the spoken words synthesized in non-real time and played back for the demonstration in what would be the product's output form. I’ll cover this in more detail in the next chapter.</para><para id="import-auto-id6957476">The daunting issue that we were facing remained: we were developing a product targeted at a cost significantly less then the then state of the art mini-computer to be used in demonstration. At the same time it needed to be small enough for a child to play with, rather than that of a mini-computer in a large room. But neither of these issues seemed to bother any of us as we prepared for the feasibility demonstration.</para><para id="import-auto-id6953578">Figure 5 shows the original design to cost.  Paul envisioned a two chip system: the first chip having both the system controller (TMS1000 based) and the speech synthesizer, and the second chip a 256 thousand bit ROM.  The total cost of the finished product would be $12.65 with a recommended selling price of $29.95. As you will see later in the book, we missed the design to cost goals by a bit.</para><figure id="import-auto-id7071351"><media id="import-auto-id6952998" alt="">
        <image mime-type="image/jpg" src="../../media/graphics5-61c7.jpg" height="750" width="1000"/>
      </media>
    <caption>The original design to cost for the Speak N Spell product.  It finally went to market at $59.95.</caption></figure>
	</section>
	<section id="eip-204"><title>References</title>

	<list id="import-auto-id6953848" list-type="enumerated" number-style="arabic"><item>
        <link url="http://datamath.org/Edu/Professor-76.htm">
          <emphasis effect="underline">http://datamath.org/Edu/Professor-76.htm</emphasis>
        </link>
      </item>
      <item>
        <link url="http://datamath.org/Speech/SpeaknMath.htm">
          <emphasis effect="underline">http://datamath.org/Speech/SpeaknMath.htm</emphasis>
        </link>
      </item>
     
    </list></section></content>
</document>